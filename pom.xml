<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>java-resolver</groupId>
    <artifactId>java-resolver</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <testSuite>src/test/resources/tests/Tests-all-tests.xml</testSuite>

        <!-- Application dependencies -->
        <symbolic-analysis.version>1.26</symbolic-analysis.version>
        <wala.version>1.5.2</wala.version>
        <guava.version>15.0</guava.version>
        <apache.lang3.version>3.5</apache.lang3.version>
        <apache.io.version>2.4</apache.io.version>
        <findbugs.version>3.0.2</findbugs.version>
        <logback.version>1.2.3</logback.version>

        <!-- Testing dependencies -->
        <testng.version>6.14.2</testng.version>
        <unitils.version>3.4.2</unitils.version>
        <jmockit.version>1.38</jmockit.version>

        <mybatis.version>3.4.6</mybatis.version>

        <kafka.version>2.1.0</kafka.version>

        <spring.version>4.3.14.RELEASE</spring.version>

        <oracle.version>12.1.0.2.20181101</oracle.version>
        <mssql.version>7.2.0.jre8</mssql.version>
        <db2.version>11.1.4.4</db2.version>
        <postgresql.version>42.2.5.jre7</postgresql.version>
        <teradata.version>15.00.00.35</teradata.version>
        <apache.db.version>2.5.0</apache.db.version>
    </properties>

    <repositories>
        <repository>
            <id>local-maven-repo</id>
            <url>file:///${project.basedir}/src/main/resources/lib/</url>
        </repository>
    </repositories>

    <dependencies>
        <dependency>
            <groupId>eu.profinit.manta</groupId>
            <artifactId>manta-connector-java-resolver-private</artifactId>
            <version>${symbolic-analysis.version}</version>
        </dependency>
        <dependency>
            <groupId>eu.profinit.manta</groupId>
            <artifactId>manta-connector-java-resolver-public</artifactId>
            <version>${symbolic-analysis.version}</version>
        </dependency>

        <dependency>
            <groupId>com.ibm.wala</groupId>
            <artifactId>com.ibm.wala.core</artifactId>
            <version>${wala.version}</version>
        </dependency>
        <dependency>
            <groupId>com.ibm.wala</groupId>
            <artifactId>com.ibm.wala.util</artifactId>
            <version>${wala.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${apache.lang3.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${apache.io.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <version>${findbugs.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>

        <!-- SCOPE: TEST -->

        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${testng.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.unitils</groupId>
            <artifactId>unitils-core</artifactId>
            <version>${unitils.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- MyBatis -->
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
            <version>${mybatis.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Kafka -->
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <version>${kafka.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- JdbcTemplate, EmbeddedDataSource -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- DataSource -->
        <dependency>
            <groupId>com.oracle.jdbc</groupId>
            <artifactId>ojdbc7</artifactId>
            <version>${oracle.version}</version>
            <!-- ojdbc cannot be easily downloadable by maven -->
            <scope>system</scope>
            <systemPath>${project.basedir}/src/test/resources/lib/db/ojdbc7-12.1.0.2.20181101.jar</systemPath>
        </dependency>
        <dependency>
            <groupId>com.microsoft.sqlserver</groupId>
            <artifactId>mssql-jdbc</artifactId>
            <version>${mssql.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.ibm.db2</groupId>
            <artifactId>jcc</artifactId>
            <version>${db2.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgresql.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jdbc-drivers</groupId>
            <artifactId>terajdbc4</artifactId>
            <version>${teradata.version}</version>
            <!-- terajdbc4 cannot be easily downloadable by maven -->
            <scope>system</scope>
            <systemPath>${project.basedir}/src/test/resources/lib/db/terajdbc4-15.00.00.35.jar</systemPath>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-dbcp2</artifactId>
            <version>${apache.db.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Create runnable JAR with all dependencies -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.1.1</version>
                <configuration>
                    <descriptorRefs>
                        <descriptorRef>jar-with-dependencies</descriptorRef>
                    </descriptorRefs>
                    <archive>
                        <manifest>
                            <mainClass>eu.profinit.manta.connector.java.analysis.Main</mainClass>
                        </manifest>
                    </archive>
                    <finalName>resolver</finalName>
                    <appendAssemblyId>false</appendAssemblyId>
                </configuration>
            </plugin>

            <!-- Copy dependencies to libs folder -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.1</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/libs</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Copy tests to libs folder -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>3.1.2</version>
                <executions>
                    <execution>
                        <id>copy-test-libs</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/libs</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Run each test class in forked process -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M3</version>
                <configuration>
                    <forkCount>1</forkCount>
                    <reuseForks>false</reuseForks>
                    <argLine>-Xms4g -Xmx8g</argLine>
                    <suiteXmlFiles>
                        <suiteXmlFile>${testSuite}</suiteXmlFile>
                    </suiteXmlFiles>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>